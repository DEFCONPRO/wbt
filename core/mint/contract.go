package mint

import (
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/common"
	"strings"
)

type storageLayout struct {
	Owner     common.Hash
	MintLimit common.Hash
}

type contract struct {
	Address       common.Address
	Bytecode      []byte
	BytecodeHash  common.Hash
	StorageLayout storageLayout
}

// Contract is an object representing predefined mint contract params.
var Contract = contract{
	Address:      common.HexToAddress("0x0000000000000000000000000000000000001000"),
	Bytecode:     common.Hex2Bytes("608060405234801561001057600080fd5b506004361061004c5760003560e01c806334259b5c146100515780638da5cb5b14610066578063996517cf14610096578063f2fde38b146100ad575b600080fd5b61006461005f366004610247565b6100c0565b005b600054610079906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f60015481565b60405190815260200161008d565b6100646100bb366004610260565b610170565b6000546001600160a01b0316331461011a5760405162461bcd60e51b815260206004820152601860248201527720bb30b4b630b136329037b7363c903337b91037bbb732b960411b60448201526064015b60405180910390fd5b600154811061016b5760405162461bcd60e51b815260206004820152601e60248201527f4d696e74206c696d69742063616e6e6f7420626520696e6372656173656400006044820152606401610111565b600155565b6000546001600160a01b031633146101c55760405162461bcd60e51b815260206004820152601860248201527720bb30b4b630b136329037b7363c903337b91037bbb732b960411b6044820152606401610111565b6001600160a01b0381166102255760405162461bcd60e51b815260206004820152602160248201527f5a65726f2061646472657373206973206e6f7420612076616c6964206f776e656044820152603960f91b6064820152608401610111565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561025957600080fd5b5035919050565b60006020828403121561027257600080fd5b81356001600160a01b038116811461028957600080fd5b939250505056fea2646970667358221220e47c633a678b6c6fa00b437fc21a7ce743a31ba848d0163e41cee1256bdccb7d64736f6c63430008130033"),
	BytecodeHash: common.HexToHash("0x094c2e08801f704f590fc847deec6076c880cdc6062f87c32614a4ff213fdf9c"), // result of crypto.Keccak256Hash(bytecode)
	StorageLayout: storageLayout{
		Owner:     common.Hash{},
		MintLimit: common.BytesToHash([]byte{1}),
	},
}

const mintEventAbiString = `[{
	"anonymous": false,
	"inputs": [
		{"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"},
		{"indexed": false, "internalType": "bytes32", "name": "burnTxHash", "type": "bytes32"},
		{"indexed": false, "internalType": "uint8", "name": "burnTxNetwork", "type": "uint8"}
	],
	"name": "Mint",
	"type": "event"
}]`

var mintEventAbi, _ = abi.JSON(strings.NewReader(mintEventAbiString))

const mintEventName = "Mint"
